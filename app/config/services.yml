services:

####  PUBLIC  ####
  public_user.registration.form.type:
    class: Application\Sonata\UserBundle\Form\Type\RegistrationFormType
    arguments: [%fos_user.model.user.class%]
    tags:
      - { name: form.type, alias: public_user_registration }

  public_user.profile.form.type:
    class: Application\Sonata\UserBundle\Form\Type\ProfileType
    arguments: [%fos_user.model.user.class%]
    tags:
      - { name: form.type, alias: public_user_profile }

  public_user.populate:
            class: Application\Sonata\UserBundle\Import\PopulateBD
            arguments: [@doctrine.orm.entity_manager]

  public_user.exportCsv:
              class: Application\Sonata\UserBundle\Export\ExportCSV
              arguments: [@service_container]

  public_user.upload_base:
      class: Application\Sonata\UserBundle\Import\UploadBase
      arguments: [%public_user.file_directory%, @service_container]

  public_user.upload_img:
        class: Application\Sonata\UserBundle\Import\UploadImg
        arguments: [%public_user.file_directory%, @service_container]

  public_user.util.user_manipulator:
      class: Application\Sonata\UserBundle\Util\UserManipulator
      arguments: [@fos_user.user_manager]

####  ADMIN  ####
  sonata.admin.base:
    class: AppBundle\Admin\BaseAdmin
    tags:
        - name: sonata.admin
          manager_type: orm
          group: admin
          label: Bases
    arguments:
        - ~
        - Application\Sonata\UserBundle\Entity\Base
        - ~

  sonata.admin.campaign:
    class: AppBundle\Admin\CampaignAdmin
    tags:
      - name: sonata.admin
        manager_type: orm
        group: admin
        label: Campagnes
    arguments:
      - ~
      - Application\Sonata\UserBundle\Entity\Campaign
      - SonataAdminBundle:CRUD

  sonata.admin.matching:
          class: AppBundle\Admin\MatchingAdmin
          arguments: [~, Application\Sonata\UserBundle\Entity\Matching, AppBundle:CRUD]
          tags:
              - {name: sonata.admin, manager_type: orm, group: admin, label: Matching}

####  POPULATE  ####
  populate_exchange_sender:
    class: Application\Sonata\UserBundle\Import\populateSender
    arguments: ['@service_container', %public_user.file_directory%]

  populate_exchange_service:
    class: Application\Sonata\UserBundle\Import\populateConsumer
    arguments: ['@service_container', @doctrine.orm.entity_manager, @old_sound_rabbit_mq.get_populate_exchange_consumer, %public_user.file_directory%]

####  MATCHING  ####
  match_exchange_sender:
    class: Application\Sonata\UserBundle\Match\dbSender
    arguments: ['@service_container']

  match_exchange_service:
    class: Application\Sonata\UserBundle\Match\dbConsumer
    arguments: ['@service_container', @doctrine.orm.entity_manager, @old_sound_rabbit_mq.get_match_exchange_consumer]

####  EVENTS  ####
  application_user_bundle.mail_subscriber:
    class: Application\Sonata\UserBundle\EventListener\MailSubscriber
    arguments:
      templating: "@twig"
      mailer: "@mailer"
    tags:
      - { name: kernel.event_subscriber }

####  BLOCKS  ####
  sonata.block.service.infouser:
      class: Application\Sonata\UserBundle\Block\UserInfoBlockService
      arguments: [ "sonata.block.service.infouser", @templating, @sonata.admin.pool, @doctrine.orm.entity_manager, @security.context]
      tags:
          - { name: sonata.block}

  sonata.block.service.infostage:
        class: Application\Sonata\UserBundle\Block\SoftStageBlockService
        arguments: [ "sonata.block.service.infouser", @templating, @sonata.admin.pool, @doctrine.orm.entity_manager, @security.context]
        tags:
            - { name: sonata.block}

  sonata.block.service.lastmatching:
          class: Application\Sonata\UserBundle\Block\LastMatchingBlockService
          arguments: [ "sonata.block.service.infouser", @templating, @sonata.admin.pool, @doctrine.orm.entity_manager, @security.context]
          tags:
              - { name: sonata.block}

  sonata.block.service.menu:
          class: Application\Sonata\UserBundle\Block\ProfileMenuBlockService
          arguments: [ "sonata.user.block.menu", @templating, @knp_menu.menu_provider, @sonata.user.profile.menu_builder]
          tags:
              - { name: sonata.block}

  security.user_checker:
      class: Application\Sonata\UserBundle\Security\UserChecker

  sonata.user.editable_role_builder:
      class: Application\Sonata\UserBundle\Security\EditableRolesBuilder
      arguments: [@security.context, @sonata.admin.pool, %security.role_hierarchy.roles%]

  sonata.user.form.type.security_roles:
      class: Application\Sonata\UserBundle\Form\Type\SecurityRolesType
      arguments: [@sonata.user.editable_role_builder]
      tags:
        - { name: form.type, alias: sonata_security_roles}